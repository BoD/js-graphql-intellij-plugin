graphql=GraphQL

# Notifications
graphql.notification.introspection.error.title=GraphQL introspection
graphql.notification.introspection.error.body=A valid schema could not be built using the introspection result.<br/>Error: {0}
graphql.notification.introspection.spec.error.body=A valid schema could not be built using the introspection result. The endpoint may not follow the GraphQL Specification.<br/>Error: {0}
graphql.notification.introspection.parse.error=The server introspection response cannot be parsed as a valid JSON object.
graphql.notification.introspection.empty.errors=Encountered empty error array, which does not conform to the GraphQL spec.
graphql.notification.error.title=GraphQL error
graphql.notification.ssl.cert.error.title=SSL certificate error
graphql.notification.stack.trace=Stack trace
graphql.notification.retry.without.defaults=Retry (skip default values from now on)
graphql.notification.retry=Retry
graphql.notification.unable.to.open.editor=Unable to open an editor for ''{0}''
graphql.notification.unable.to.create.file=Unable to create file ''{0}'' in directory ''{1}''.<br/>Error: {2}
graphql.notification.invalid.config.file=Invalid config file
graphql.notification.empty.schema.path=Please set a non-empty `schemaPath` field in the config file.
graphql.notification.empty.endpoint.url=Please set a non-empty endpoint `url` field in the config file.
graphql.notification.unable.to.parse.file=Unable to parse {0}
graphql.notification.load.schema.from.endpoint.title=Get GraphQL schema from endpoint now?
graphql.notification.load.schema.from.endpoint.body=Introspect ''{0}'' to update the local schema file.
graphql.notification.load.schema.from.endpoint.action=Introspect ''{0}''
graphql.notification.dont.show.again.message=Don't show again
graphql.notification.trust.all.hosts=Trust all hosts
graphql.notification.file.out.of.scope=The .graphqlconfig associated with this file does not include it. Schema discovery and language tooling will use entire project.
graphql.notification.file.out.of.scope.edit=Edit .graphqlconfig globs
graphql.notification.configuration.error=GraphQL configuration error
graphql.notification.config.invalid.file.type=The GraphQL configuration file has invalid file type. It will be ignored by schema discovery and language tooling.
graphql.notification.config.invalid.file.type.associate=Associate JSON file type

# Introspection
graphql.introspection.missing.data=Expected `data` key to be present in query result.
graphql.introspection.missing.schema=Expected `__schema` key to be present in query result data.
graphql.introspection.errors=Introspection query returned errors: {0}
graphql.introspection.run.query=Run introspection query to generate GraphQL SDL schema file

# Progress
graphql.progress.executing.introspection.query=Executing GraphQL introspection query
graphql.progress.configuration.scan=GraphQL configuration scan

# Editor
graphql.line.marker.generate.schema.file=Generate GraphQL SDL schema file

# Config
graphql.config=GraphQL Config

# Inspections
graphql.inspection.go.to.related.definition.family.name=Navigate to related definition
graphql.inspection.go.to.related.definition.name=Navigate to related definition ''{0}''
graphql.inspection.related.definitions=Related definitions:

graphql.inspection.suppress.for.file=Suppress for file
graphql.inspection.suppress.for.definition=Suppress for definition

graphql.inspection.display.name.schema.validation=Schema validation
graphql.inspection.display.name.unresolved.reference=Unresolved reference
graphql.inspection.display.name.type.redefinition=Type redefinition
graphql.inspection.display.name.member.redefinition=Member redefinition
graphql.inspection.display.name.unexpected.type=Unexpected type
graphql.inspection.display.name.illegal.name=Illegal name
graphql.inspection.display.name.empty.type=Empty type
graphql.inspection.display.name.duplicate.argument=Duplicate argument
graphql.inspection.display.name.interface.implementation=Interface implementation
graphql.inspection.display.name.duplicate.directive=Duplicate directive
graphql.inspection.display.name.missing.type=Missing type
graphql.inspection.display.name.illegal.directive.argument=Illegal directive argument
graphql.inspection.display.name.invalid.directive.location=Invalid directive location

# Inspection groups
graphql.inspection.group.general=General
graphql.inspection.group.schema=Schema

# Error reporter
graphql.report.to.issue.tracker=Report to GraphQL Issue Tracker
